Test environment setup (All 3 machines)

Launch 3 ubuntu servers (Master must have 2 cpu cores & 4GB RAM)
ssh into master
 sudo apt-get update
Install https package
 sudo apt-get install apt-transport-https
This(https) is needed for intra cluster communication (particularly from control plane to individual pods)
Install docker
 sudo apt install docker.io
 docker --version
 sudo systemctl start docker
 sudo systemctl enable docker
Setup open GPG key. This is required for intra cluster communication. It will be added to source key on this node. i.e. when k8s sends signed info to our host, it is going to accept those info b'cos this open GPG key is present in the source key.
 sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
Edit sources.list file
 sudo nano /etc/apt/sources.list.d/kubernetes.list
   deb http://apt.kubernetes.io/ kubernetes-xenial main
(debian s/w repo) (url from where to get s/w) (distribution) (name of component)
 sudo apt-get update
Install all packages
 sudo apt-get install -y kubelet kubeadm kubectl kubernetes-cni
--------------------------------------------------
Bootstrapping the Master Node(in Master)

To initiate K8S cluster (Be in master)
 sudo kubeadm init
Copy the command to run in nodes & save in note pad
Creates both .kube and its parent directories (-p)
 mkdir -p $HOME/.kube
Copy configurations to kube directory (in config file)
 sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
Provide user permissions to config file
 sudo chown $(id -u):$(id -g) $HOME/.kube/config
Deploy flannel node network for its repository path. Flannel is going to place a binary in each node.
 sudo kubectl apply -f  https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
 sudo kubectl apply -f  https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml
------------------------------------------------------
Configure worker nodes(in nodes)

Master has provided one command. That we have to run in each nd every node(add sudo in command).
 sudo kubeadm join --token ..............................
Individual token and discovery token along with its IP are used by master etcd cluster for establishing mutual trust b/w master and node.
These were provided by master and are being used by node.
This node has joined the cluster:
Certificate signing request was sent to master and a response was received
The Kubelet was informed of the new secure connection details.
So run the same command in all other nodes.
Go to master
 sudo kubectl get nodes
Can see 1-master
     2-nodes




